<?xml version="1.0" encoding="UTF-8"?>
<!-- scan属性未true时，如果配置文档发生改变将会进行重新加载 -->
<!-- scanPeriod属性设置监测配置文件修改的时间间隔，默认单位为毫秒，在scan为true时才生效 -->
<!-- debug属性如果为true时，会打印出logback内部的日志信息 -->
<configuration scan="true" scanPeriod="30 seconds" debug="false" packagingData="true">

    <!-- 定义参数常量 -->
    <!-- 日志级别：TRACE<DEBUG<INFO<WARN<ERROR，其中常用的是DEBUG、INFO和ERROR -->
    <property name="LOG_HOME" value="spring-boot-logback/log"/>

    <!-- 文件保留时间 -->
    <property name="LOG_MAX_HISTORY" value="30"/>

    <!-- 日志存储路径 -->
    <property name="LOG_FILE_PATH" value="${catalina.base}/logs/webapps"/>

    <!-- 日志的显式格式 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n"/>

    <!-- 控制台显示 -->
    <appender name="STD_OUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- filter 必须写在前面才能生效 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- INFO 日志写入到文件中,外部访问的同步日志,只接受 INFO 级别的日志 -->
    <appender name="DEBUG_ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter 必须写在前面才能生效 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置日志级别 -->
            <level>DEBUG</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 文件路径 -->
        <file>log/info.log</file>
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/info/risk-access-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 15 天的时间周期，日志量最大 100MB-->
            <maxHistory>15</maxHistory>
            <totalSizeCap>100MB</totalSizeCap>
        </rollingPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS}|%p|%m%n</pattern>
        </encoder>
    </appender>

    <!-- ERROR 产生错误的日志 -->
    <appender name="INFO_ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/warn/warn.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>500MB</maxFileSize>
        </triggeringPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 产生同步信息的日志 -->
    <appender name="INFO_NOTICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/sync.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info/sync.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 同步日志产生的记录器 -->
    <logger name="DEBUG" level="debug">
        <appender-ref ref="DEBUG_ACCESS"/>
        <!--<appender-ref ref="STD_OUT"/>-->
    </logger>

    <!-- 记录所有服务器内部产生不正常的数据 -->
    <logger name="INFO" level="info">
        <appender-ref ref="INFO_ACCESS"/>
        <!--<appender-ref ref="STD_OUT"/>-->
    </logger>

    <!-- 记录同步策略的信息 -->
    <logger name="WARN" level="warn">
        <appender-ref ref="INFO_NOTICE"/>
        <!--<appender-ref ref="STD_OUT"/>-->
    </logger>

    <logger name="ERROR" level="error">
        <appender-ref ref="STD_OUT"/>
    </logger>

</configuration>